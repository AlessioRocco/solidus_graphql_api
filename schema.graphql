"""
Country.
"""
type Country implements Node {
  createdAt: ISO8601DateTime
  id: ID!
  iso: String!
  iso3: String!
  isoName: String!
  name: String!
  numcode: Int!
  states(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): StateConnection!
  statesRequired: Boolean!
  updatedAt: ISO8601DateTime
}

"""
The connection type for Country.
"""
type CountryConnection {
  """
  A list of edges.
  """
  edges: [CountryEdge]

  """
  A list of nodes.
  """
  nodes: [Country]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type CountryEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Country
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

"""
An object with an ID.
"""
interface Node {
  """
  ID of the object.
  """
  id: ID!
}

"""
Order.
"""
type Order implements Node {
  additionalTaxTotal: String!
  adjustmentTotal: String!
  approvedAt: ISO8601DateTime
  approverName: String
  canceledAt: ISO8601DateTime
  channel: String
  completedAt: ISO8601DateTime
  confirmationDelivered: Boolean!
  createdAt: ISO8601DateTime
  currency: String!
  email: String!
  frontendViewable: Boolean!
  guestToken: String
  id: ID!
  includedTaxTotal: String!
  itemCount: Int!
  itemTotal: String!
  lastIpAddress: String
  number: String!
  paymentState: String!
  paymentTotal: String!
  promoTotal: String!
  shipmentState: String!
  shipmentTotal: String!
  specialInstructions: String
  state: String!
  total: String!
  updatedAt: ISO8601DateTime
}

"""
The connection type for Order.
"""
type OrderConnection {
  """
  A list of edges.
  """
  edges: [OrderEdge]

  """
  A list of nodes.
  """
  nodes: [Order]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type OrderEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Order
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Query {
  """
  Supported Countries.
  """
  countries(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): CountryConnection!

  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node

  """
  Fetches a list of objects given a list of IDs.
  """
  nodes(
    """
    IDs of the objects.
    """
    ids: [ID!]!
  ): [Node]!

  """
  Customer Orders.
  """
  orders(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): OrderConnection!
}

"""
State.
"""
type State implements Node {
  abbr: String!
  createdAt: ISO8601DateTime
  id: ID!
  name: String!
  updatedAt: ISO8601DateTime
}

"""
The connection type for State.
"""
type StateConnection {
  """
  A list of edges.
  """
  edges: [StateEdge]

  """
  A list of nodes.
  """
  nodes: [State]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type StateEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: State
}