type Query {
  """
  Supported Countries.
  """
  countries(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): CountryConnection!

  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node

  """
  Fetches a list of objects given a list of IDs.
  """
  nodes(
    """
    IDs of the objects.
    """
    ids: [ID!]!
  ): [Node]!

  """
  Find a product by its slug.
  """
  productBySlug(slug: String!): Product

  """
  Supported Products.
  """
  products(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): ProductConnection!

  """
  Supported Taxonomies.
  """
  taxonomies(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): TaxonomyConnection!
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

"""
An object with an ID.
"""
interface Node {
  """
  ID of the object.
  """
  id: ID!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}


"""
Country.
"""
type Country implements Node {
  createdAt: ISO8601DateTime
  id: ID!
  iso: String!
  iso3: String!
  isoName: String!
  name: String!
  numcode: Int!
  states(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): StateConnection!
  statesRequired: Boolean!
  updatedAt: ISO8601DateTime
}

"""
The connection type for Country.
"""
type CountryConnection {
  """
  A list of edges.
  """
  edges: [CountryEdge]

  """
  A list of nodes.
  """
  nodes: [Country]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type CountryEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Country
}

"""
State.
"""
type State implements Node {
  abbr: String!
  createdAt: ISO8601DateTime
  id: ID!
  name: String!
  updatedAt: ISO8601DateTime
}

"""
The connection type for State.
"""
type StateConnection {
  """
  A list of edges.
  """
  edges: [StateEdge]

  """
  A list of nodes.
  """
  nodes: [State]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type StateEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: State
}

"""
Product.
"""
type Product implements Node {
 createdAt: ISO8601DateTime
 description: String
 id: ID!
 masterVariant: Variant!
 metaDescription: String
 metaKeywords: String
 metaTitle: String
 name: String!
 optionTypes(
   """
   Returns the elements in the list that come after the specified cursor.
   """
   after: String

   """
   Returns the elements in the list that come before the specified cursor.
   """
   before: String

   """
   Returns the first _n_ elements from the list.
   """
   first: Int

   """
   Returns the last _n_ elements from the list.
   """
   last: Int
 ): OptionTypeConnection!
 productProperties(
   """
   Returns the elements in the list that come after the specified cursor.
   """
   after: String

   """
   Returns the elements in the list that come before the specified cursor.
   """
   before: String

   """
   Returns the first _n_ elements from the list.
   """
   first: Int

   """
   Returns the last _n_ elements from the list.
   """
   last: Int
 ): ProductPropertyConnection!
 slug: String!
 updatedAt: ISO8601DateTime
 variants(
   """
   Returns the elements in the list that come after the specified cursor.
   """
   after: String

   """
   Returns the elements in the list that come before the specified cursor.
   """
   before: String

   """
   Returns the first _n_ elements from the list.
   """
   first: Int

   """
   Returns the last _n_ elements from the list.
   """
   last: Int
 ): VariantConnection!
}

"""
The connection type for Product.
"""
type ProductConnection {
 """
 A list of edges.
 """
 edges: [ProductEdge]

 """
 A list of nodes.
 """
 nodes: [Product]

 """
 Information to aid in pagination.
 """
 pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type ProductEdge {
 """
 A cursor for use in pagination.
 """
 cursor: String!

 """
 The item at the end of the edge.
 """
 node: Product
}

"""
Taxonomy.
"""
type Taxonomy implements Node {
  createdAt: ISO8601DateTime
  id: ID!
  name: String!
  rootTaxon: Taxon
  taxons(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): TaxonConnection!
  updatedAt: ISO8601DateTime
}

"""
The connection type for Taxonomy.
"""
type TaxonomyConnection {
  """
  A list of edges.
  """
  edges: [TaxonomyEdge]

  """
  A list of nodes.
  """
  nodes: [Taxonomy]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type TaxonomyEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Taxonomy
}

"""
Taxon.
"""
type Taxon implements Node {
  children(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): TaxonConnection
  createdAt: ISO8601DateTime
  description: String
  iconUrl: String
  id: ID!
  metaDescription: String
  metaKeywords: String
  metaTitle: String
  name: String!
  parentTaxon: Taxon
  permalink: String!
  updatedAt: ISO8601DateTime
}

"""
The connection type for Taxon.
"""
type TaxonConnection {
  """
  A list of edges.
  """
  edges: [TaxonEdge]

  """
  A list of nodes.
  """
  nodes: [Taxon]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
OptionValue.
"""
type OptionValue implements Node {
 createdAt: ISO8601DateTime
 id: ID!
 name: String!
 position: String!
 presentation: String!
 updatedAt: ISO8601DateTime
}

"""
The connection type for OptionValue.
"""
type OptionValueConnection {
 """
 A list of edges.
 """
 edges: [OptionValueEdge]

 """
 A list of nodes.
 """
 nodes: [OptionValue]

 """
 Information to aid in pagination.
 """
 pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type OptionValueEdge {
 """
 A cursor for use in pagination.
 """
 cursor: String!

 """
 The item at the end of the edge.
 """
 node: OptionValue
}


"""
Price.
"""
type Price implements Node {
 amount: String!
 countryIso: String
 createdAt: ISO8601DateTime
 currency: String!
 currencySymbol: String!
 displayAmount: String!
 displayCountry: String!
 id: ID!
 updatedAt: ISO8601DateTime
}

"""
The connection type for Price.
"""
type PriceConnection {
 """
 A list of edges.
 """
 edges: [PriceEdge]

 """
 A list of nodes.
 """
 nodes: [Price]

 """
 Information to aid in pagination.
 """
 pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type PriceEdge {
 """
 A cursor for use in pagination.
 """
 cursor: String!

 """
 The item at the end of the edge.
 """
 node: Price
}

"""
Variant.
"""
type Variant implements Node {
 createdAt: ISO8601DateTime
 defaultPrice: Price!
 depth: String
 height: String
 id: ID!
 isMaster: Boolean!
 optionValues(
   """
   Returns the elements in the list that come after the specified cursor.
   """
   after: String

   """
   Returns the elements in the list that come before the specified cursor.
   """
   before: String

   """
   Returns the first _n_ elements from the list.
   """
   first: Int

   """
   Returns the last _n_ elements from the list.
   """
   last: Int
 ): OptionValueConnection!
 position: Int!
 prices(
   """
   Returns the elements in the list that come after the specified cursor.
   """
   after: String

   """
   Returns the elements in the list that come before the specified cursor.
   """
   before: String

   """
   Returns the first _n_ elements from the list.
   """
   first: Int

   """
   Returns the last _n_ elements from the list.
   """
   last: Int
 ): PriceConnection!
 sku: String!
 updatedAt: ISO8601DateTime
 weight: String!
 width: String
}

"""
The connection type for Variant.
"""
type VariantConnection {
 """
 A list of edges.
 """
 edges: [VariantEdge]

 """
 A list of nodes.
 """
 nodes: [Variant]

 """
 Information to aid in pagination.
 """
 pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type TaxonEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Taxon
}

"""
An edge in a connection.
"""
type VariantEdge {
 """
 A cursor for use in pagination.
 """
 cursor: String!

 """
 The item at the end of the edge.
 """
 node: Variant
}

"""
OptionType Type.
"""
type OptionType implements Node {
 createdAt: ISO8601DateTime
 id: ID!
 name: String!
 optionValues(
   """
   Returns the elements in the list that come after the specified cursor.
   """
   after: String

   """
   Returns the elements in the list that come before the specified cursor.
   """
   before: String

   """
   Returns the first _n_ elements from the list.
   """
   first: Int

   """
   Returns the last _n_ elements from the list.
   """
   last: Int
 ): OptionValueConnection!
 position: Int!
 presentation: String!
 updatedAt: ISO8601DateTime
}

"""
The connection type for OptionType.
"""
type OptionTypeConnection {
 """
 A list of edges.
 """
 edges: [OptionTypeEdge]

 """
 A list of nodes.
 """
 nodes: [OptionType]

 """
 Information to aid in pagination.
 """
 pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type OptionTypeEdge {
 """
 A cursor for use in pagination.
 """
 cursor: String!

 """
 The item at the end of the edge.
 """
 node: OptionType
}

"""
Product Property.
"""
type ProductProperty implements Node {
 createdAt: ISO8601DateTime
 id: ID!
 position: Int!
 property: Property
 updatedAt: ISO8601DateTime
 value: String
}

"""
The connection type for ProductProperty.
"""
type ProductPropertyConnection {
 """
 A list of edges.
 """
 edges: [ProductPropertyEdge]

 """
 A list of nodes.
 """
 nodes: [ProductProperty]

 """
 Information to aid in pagination.
 """
 pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type ProductPropertyEdge {
 """
 A cursor for use in pagination.
 """
 cursor: String!

 """
 The item at the end of the edge.
 """
 node: ProductProperty
}

"""
Property.
"""
type Property implements Node {
 createdAt: ISO8601DateTime
 id: ID!
 name: String!
 presentation: String!
 updatedAt: ISO8601DateTime
}
